/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Dimension;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.swing.table.DefaultTableModel;

import connectDB.ConnectDB;
import dao.HoaDonThanhToan_DAO;
import dao.HoaDonThuePhong_DAO;
import entity.HoaDonThuePhong;

import com.toedter.calendar.JMonthChooser;
import javax.swing.JLabel;
import java.awt.Font;
import java.awt.Color;

/**
 *
 * @author ADMIN
 */
public class JPanel_ThongKeDoanhThuTheoThang extends javax.swing.JPanel {

    private HoaDonThuePhong_DAO hoaDonThuePhong_DAO;
	private HoaDonThanhToan_DAO hoaDonThanhToan_Dao;
	private DefaultTableModel model;
	private JMonthChooser monthChooser;
	private int soLanSuDungPhong;
	/**
     * Creates new form ThongKeDoanhThuTheoThang
     */
    public JPanel_ThongKeDoanhThuTheoThang() {
    	try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
        hoaDonThuePhong_DAO = new HoaDonThuePhong_DAO();
        hoaDonThanhToan_Dao = new HoaDonThanhToan_DAO();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlKQDoanhThu = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        tabThongKeTheoThang = new javax.swing.JTabbedPane();

        setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        setPreferredSize(new Dimension(1219, 755));

        pnlKQDoanhThu.setBorder(javax.swing.BorderFactory.createTitledBorder("Kết Qủa Doanh Thu"));
        pnlKQDoanhThu.setToolTipText("Kết quả doanh thu");
        
        lblDoanhThu = new JLabel("Tổng Doanh Thu :");
        lblDoanhThu.setFont(new Font("Tahoma", Font.BOLD, 30));
        
        txtTongDoanhThu = new JLabel("0");
        txtTongDoanhThu.setForeground(new Color(255, 0, 0));
        txtTongDoanhThu.setFont(new Font("Tahoma", Font.BOLD, 35));

        javax.swing.GroupLayout pnlKQDoanhThuLayout = new javax.swing.GroupLayout(pnlKQDoanhThu);
        pnlKQDoanhThuLayout.setHorizontalGroup(
        	pnlKQDoanhThuLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnlKQDoanhThuLayout.createSequentialGroup()
        			.addGap(32)
        			.addComponent(lblDoanhThu, GroupLayout.PREFERRED_SIZE, 289, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(txtTongDoanhThu, GroupLayout.PREFERRED_SIZE, 480, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(346, Short.MAX_VALUE))
        );
        pnlKQDoanhThuLayout.setVerticalGroup(
        	pnlKQDoanhThuLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnlKQDoanhThuLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(pnlKQDoanhThuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblDoanhThu)
        				.addComponent(txtTongDoanhThu))
        			.addContainerGap(33, Short.MAX_VALUE))
        );
        pnlKQDoanhThu.setLayout(pnlKQDoanhThuLayout);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabThongKeTheoThang.setBackground(new java.awt.Color(255, 255, 255));
        tabThongKeTheoThang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabThongKeTheoThang.setToolTipText("tổng quan");
        tabThongKeTheoThang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tabThongKeTheoThang.setPreferredSize(new java.awt.Dimension(300, 100));
        pnlBangChiTiet = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        
                jTable2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
                jTable2.setModel(model = new DefaultTableModel(
                	new Object[][] {
                		
                	},
                	new String[] {
                		" Ng\u00E0y ", "Số lần sử dụng phòng", "T\u1ED5ng Ti\u1EC1n ( VN\u0110 )"
                	}
                ));
                jTable2.setShowGrid(true);
                jScrollPane2.setViewportView(jTable2);
                
                


                javax.swing.GroupLayout pnlBangChiTietLayout = new javax.swing.GroupLayout(pnlBangChiTiet);
                pnlBangChiTietLayout.setHorizontalGroup(
                	pnlBangChiTietLayout.createParallelGroup(Alignment.LEADING)
                		.addGroup(pnlBangChiTietLayout.createSequentialGroup()
                			.addGap(20)
                			.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 1163, GroupLayout.PREFERRED_SIZE)
                			.addContainerGap(27, Short.MAX_VALUE))
                );
                pnlBangChiTietLayout.setVerticalGroup(
                	pnlBangChiTietLayout.createParallelGroup(Alignment.LEADING)
                		.addGroup(pnlBangChiTietLayout.createSequentialGroup()
                			.addContainerGap()
                			.addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                			.addContainerGap())
                );
                pnlBangChiTiet.setLayout(pnlBangChiTietLayout);
                
                        tabThongKeTheoThang.addTab("Chi Tiết", pnlBangChiTiet);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabThongKeTheoThang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabThongKeTheoThang, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
        );

        tabThongKeTheoThang.getAccessibleContext().setAccessibleName("Chi tiết ");
        tabThongKeTheoThang.getAccessibleContext().setAccessibleDescription("Chi tiết");
        
         monthChooser = new JMonthChooser();
         monthChooser.getSpinner().setBounds(0, 0, 194, 38);
         
      // Đặt giá trị mặc định cho monthChooser
         monthChooser.setMonth(11); // 11 là tháng 12 (vị trí của tháng 12 là 11 vì bắt đầu từ 0)
         docDuLieuLenBang();
         // Thêm sự kiện cho monthChooser
         monthChooser.addPropertyChangeListener(evt -> {
             if ("month".equals(evt.getPropertyName())) {
                 // Người dùng đã chọn một tháng mới
                 int selectedMonth = monthChooser.getMonth() + 1;
                 // Thực hiện thao tác thống kê hoặc xử lý dữ liệu với tháng mới
                 // Gọi hàm hoặc thực hiện các hành động cần thiết ở đây
                 docDuLieuLenBang();
             }
         });


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(1003)
        			.addComponent(monthChooser, GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
        			.addGap(27))
        		.addGroup(layout.createSequentialGroup()
        			.addGap(19)
        			.addComponent(pnlKQDoanhThu, GroupLayout.PREFERRED_SIZE, 1178, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(16)
        			.addComponent(pnlKQDoanhThu, GroupLayout.PREFERRED_SIZE, 98, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(monthChooser, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE))
        );
        monthChooser.setLayout(null);
        this.setLayout(layout);

        getAccessibleContext().setAccessibleName("Chi Tiết");
    }// </editor-fold>//GEN-END:initComponents
    
    @SuppressWarnings("deprecation")
	private void docDuLieuLenBang() {
        model.setRowCount(0);
        double tongTien = 0;
        int thang = monthChooser.getMonth() + 1;
        int nam = 0;
        int ngay = 0;

        ArrayList<HoaDonThuePhong> dsHD = hoaDonThuePhong_DAO.getHDTheoThang(thang);

        DecimalFormat formatter = new DecimalFormat("###,###,###");

        HashMap<String, Object[]> ngayMap = new HashMap<>();
        ArrayList<String> sortedDays = new ArrayList<>();

        for (HoaDonThuePhong hd : dsHD) {
            ngay = hd.getNgayTaoHoaDon().getDate();
            nam = hd.getNgayTaoHoaDon().getYear() + 1900;

            String key = ngay + "/" + thang + "/" + nam;
            try {
                soLanSuDungPhong = hoaDonThanhToan_Dao.getSoLanSuDungPhong(ngay, thang);
                tongTien = hoaDonThanhToan_Dao.getTongTienTheoNgay(hd.getNgayTaoHoaDon());

                // Kiểm tra xem phòng đã có trong Map chưa
                if (ngayMap.containsKey(key)) {
                    // Nếu đã có, cập nhật tổng tiền thanh toán và tổng tiền dịch vụ
                    Object[] info = ngayMap.get(key);
                    int prevSoLanSuDung = (int) info[0];
                    double prevTonsogTien = (double) info[1];
                    // Cập nhật tổng tiền
                    int updatedSolanSuDung = prevSoLanSuDung + soLanSuDungPhong;
                    double updatedTongTienDichVu = prevTonsogTien + tongTien;

                    // Cập nhật thông tin trong Map
                    ngayMap.put(key, new Object[] {prevSoLanSuDung, tongTien});
                } else {
                    ngayMap.put(key, new Object[] {soLanSuDungPhong, tongTien});
                    sortedDays.add(key);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        // Sắp xếp các ngày theo thứ tự tăng dần
        Collections.sort(sortedDays);

        for (String ngayThangNam : sortedDays) {
            Object[] info = ngayMap.get(ngayThangNam);
            soLanSuDungPhong = (int) info[0];
            tongTien = (double) info[1];
            model.addRow(new Object[]{
                    ngayThangNam,
                    soLanSuDungPhong,
                    formatter.format(tongTien)
            });
        }

        double tong = hoaDonThanhToan_Dao.getTongTienTheoThang(thang);
        String tt = formatter.format(tong) + " VNĐ";
        txtTongDoanhThu.setText(tt);
    }

//  }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel pnlBangChiTiet;
    private javax.swing.JPanel pnlKQDoanhThu;
    private javax.swing.JTabbedPane tabThongKeTheoThang;
    private JLabel lblDoanhThu;
    private JLabel txtTongDoanhThu;
}
