package gui;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;

import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import connectDB.ConnectDB;
import dao.NhanVien_DAO;
import entity.KhachHang;
import entity.NhanVien;

import java.awt.LayoutManager;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.RowFilter;

/**
 *
 * @author admin
 */
public class JPanel_TraCuuNhanVien extends javax.swing.JPanel implements MouseListener{
	 private NhanVien_DAO nhanVien_dao;
	 private ArrayList<NhanVien> listNhanVien;
	 private DefaultTableModel mode_NhanVien;
	private ButtonGroup buttonGroup1;
	private JPanel pnlThongTinTraCuu;
	private JLabel lblTenNV;
	private JLabel lblSoDienThoai;
	private JLabel lblGioiTinh;
	private JTextField txtTenNV;
	private JTextField txtSoDienThoai;
	private JRadioButton radNam;
	private JRadioButton radNu;
	private JButton btnTimKiem;
	private JPanel pnlDSNV;
	private JTable tblDSNV;
	private DefaultTableModel model_NV;
	private JButton btnLamMoi;
	private JScrollPane jScrollPane1;

	/**
     * Creates new form JPanelTraCuuNhanVien
     */
    public JPanel_TraCuuNhanVien() {
    	try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		nhanVien_dao = new NhanVien_DAO();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlThongTinTraCuu = new javax.swing.JPanel();
        lblTenNV = new javax.swing.JLabel();
        lblSoDienThoai = new javax.swing.JLabel();
        lblGioiTinh = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        txtSoDienThoai = new javax.swing.JTextField();
        radNam = new javax.swing.JRadioButton();
        radNu = new javax.swing.JRadioButton();
        btnLamMoi = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        pnlDSNV = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSNV = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1240, 750));

        pnlThongTinTraCuu.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông Tin Tra Cứu"));

        lblTenNV.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTenNV.setText("Tên Nhân Viên");

        lblSoDienThoai.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSoDienThoai.setText("Số Điện Thoại");

        lblGioiTinh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGioiTinh.setText("Giới Tính");

        buttonGroup1.add(radNam);
        radNam.setSelected(true);
        radNam.setText("Nam");
        radNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                radNamActionPerformed(evt);
               xuLySuKienTimKiem();
            }
        });

        buttonGroup1.add(radNu);
        radNu.setText("Nữ");
        radNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                radNamActionPerformed(evt);
                xuLySuKienTimKiem();
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon("item/refresh25.png")); // NOI18N
        btnLamMoi.setText("Làm Mới");
        btnLamMoi.setToolTipText("Làm mới");
        btnLamMoi.setBorder(null);
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	lamMoi();
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon("item/search25.png")); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.setToolTipText("Tìm kiếm");
        btnTimKiem.setBorder(null);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	xuLySuKienTimKiem();
            }
        });

        javax.swing.GroupLayout pnlThongTinTraCuuLayout = new javax.swing.GroupLayout(pnlThongTinTraCuu);
        pnlThongTinTraCuu.setLayout(pnlThongTinTraCuuLayout);
        pnlThongTinTraCuuLayout.setHorizontalGroup(
            pnlThongTinTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinTraCuuLayout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addGroup(pnlThongTinTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTenNV)
                    .addComponent(lblSoDienThoai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlThongTinTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinTraCuuLayout.createSequentialGroup()
                        .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(lblGioiTinh)
                        .addGap(18, 18, 18)
                        .addComponent(radNam, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(radNu, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addGroup(pnlThongTinTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlThongTinTraCuuLayout.setVerticalGroup(
            pnlThongTinTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinTraCuuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongTinTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTenNV))
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(pnlThongTinTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinTraCuuLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(pnlThongTinTraCuuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGioiTinh)
                            .addComponent(radNam)
                            .addComponent(radNu)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlThongTinTraCuuLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlThongTinTraCuuLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblSoDienThoai)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pnlDSNV.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh Sách nhân viên"));

        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblDSNV.setAutoCreateRowSorter(true);
        tblDSNV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblDSNV.setModel(model_NV = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                
            },
            new String [] {
                    "Mã nhân viên", "Tên nhân viên", "Ngày sinh", "Giới tính", "CCCD", "Chức vụ ", "Trạng thái", "Số điện thoại", "Địa chỉ"
                }
        ) 
        );
        tblDSNV.setFocusable(false);
        tblDSNV.setShowGrid(true);
        jScrollPane1.setViewportView(tblDSNV);
        

        javax.swing.GroupLayout pnlDSKhachHangLayout = new javax.swing.GroupLayout(pnlDSNV);
        pnlDSKhachHangLayout.setHorizontalGroup(
        	pnlDSKhachHangLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnlDSKhachHangLayout.createSequentialGroup()
        			.addGap(16)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 1143, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(18, Short.MAX_VALUE))
        );
        pnlDSKhachHangLayout.setVerticalGroup(
        	pnlDSKhachHangLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnlDSKhachHangLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 488, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(22, Short.MAX_VALUE))
        );
        pnlDSNV.setLayout(pnlDSKhachHangLayout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(15)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(pnlDSNV, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(pnlThongTinTraCuu, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 1193, Short.MAX_VALUE))
        			.addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(15)
        			.addComponent(pnlThongTinTraCuu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(pnlDSNV, GroupLayout.PREFERRED_SIZE, 532, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(51, Short.MAX_VALUE))
        );
        this.setLayout(layout);
    	tblDSNV.addMouseListener(this);
        loadNhanVien();
    }// </editor-fold>                        
    
    
    private void cbbChucVuActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void cbbGioiTinhActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

 
    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    	lamMoi();
    }              
    public void loadNhanVien() {
  		listNhanVien = nhanVien_dao.getAllNhanVien();
  		
  		for (NhanVien nv: listNhanVien) {
  			String gt ="Nữ";
  			if(nv.getGioiTinh()==1) {
  				gt ="Nam";
  			}
  			model_NV.addRow(new Object[] { 
  					nv.getMaNhanVien(), nv.getTenNhanVien() ,
  					nv.getNgaySinh(),gt,
  					nv.getcCCD(), nv.getChucVu(),nv.getTrangThai(), 
  					nv.getSoDienThoai(),nv.getDiaChi() });
  		}
  	}
    public void lamMoi() {
    	txtTenNV.setText("");
		txtSoDienThoai.setText("");
		buttonGroup1.setSelected(radNam.getModel(), true);
    	txtTenNV.requestFocus();
    	model_NV.setRowCount(0);
    	loadNhanVien();
    	
    }
    public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		int r = tblDSNV.getSelectedRow();
		txtTenNV.setText(model_NV.getValueAt(r, 1).toString());
		String  gt = model_NV.getValueAt(r, 3).toString();
		if(gt == "Nữ") {
			radNu.isSelected();
		}
		else
		{
			radNam.isSelected();
		}
		txtSoDienThoai.setText(model_NV.getValueAt(r, 7).toString());
		
		
		
		
	}
   
    private int getSelectedGioiTinh() {
        int gioiTinh = 1; // Gán giá trị mặc định là Nam khi không chọn button
        if (radNam.isSelected()) {
            gioiTinh = 1; // Giả sử chọn giới tính Nam
        } else if (radNu.isSelected()) {
            gioiTinh = 0; // Giả sử chọn giới tính Nữ
        }
        return gioiTinh;
    }
    
    public List<NhanVien> timKiemNhanVien() {
        String ten = txtTenNV.getText().trim();
        String soDienThoai = txtSoDienThoai.getText().trim();
        int gioiTinh = getSelectedGioiTinh(); // Hàm này phải tự viết để lấy giới tính từ UI

        List<NhanVien> ketQuaTimKiem = new ArrayList<>();

        // Gọi các hàm tìm kiếm trong lớp DAO để tìm kiếm khách hàng
        if (!ten.isEmpty()) {
            List<NhanVien> ketQuaTen = nhanVien_dao.searchNhanVienByTen(ten);
            for (NhanVien nv : ketQuaTen) {
                if (!ketQuaTimKiem.contains(nv)) {
                    ketQuaTimKiem.add(nv);
                }
            }
        }
        if (!soDienThoai.isEmpty()) {
            List<NhanVien> ketQuaSDT = nhanVien_dao.searchNhanVienBySoDienThoai(soDienThoai);
            for (NhanVien nv : ketQuaSDT) {
                if (!ketQuaTimKiem.contains(nv)) {
                    ketQuaTimKiem.add(nv);
                }
            }
        }
        if (gioiTinh == 0 || gioiTinh == 1) {
            List<NhanVien> ketQuaGioiTinh = nhanVien_dao.searchNhanVienByGioiTinh(gioiTinh);
            for (NhanVien nv : ketQuaGioiTinh) {
                if (!ketQuaTimKiem.contains(nv)) {
                    ketQuaTimKiem.add(nv);
                }
            }
        }

        return ketQuaTimKiem;
    }

    public void capNhatBangHienThi(List<NhanVien> danhSachKetQua) {
    	String gioitinh = "";
        DefaultTableModel model = (DefaultTableModel) tblDSNV.getModel();
        model.setRowCount(0); // Xóa tất cả dữ liệu hiện tại trong bảng

        for (NhanVien nv : danhSachKetQua) {
        	if(nv.getGioiTinh() == 1) {
				gioitinh = "Nam";
			}else {
				gioitinh = "Nữ";
			}
			model_NV.addRow(new Object[] { 
					nv.getMaNhanVien(), nv.getTenNhanVien() ,
  					nv.getNgaySinh(),gioitinh,
  					nv.getcCCD(), nv.getChucVu(),nv.getTrangThai(), 
  					nv.getSoDienThoai(),nv.getDiaChi() });
		
        }
    }
    Border bdFalse = BorderFactory.createLineBorder(Color.red);
  	Border bdTrue = BorderFactory.createLineBorder(Color.green);
    public void xuLySuKienTimKiem() {
    	if(ValidData()) {
    		List<NhanVien> ketQuaTimKiem = timKiemNhanVien();
            capNhatBangHienThi(ketQuaTimKiem);
    	}
    }
    public boolean ValidData() {
 		String tenKH = txtTenNV.getText().trim();
 		String sdt = txtSoDienThoai.getText().trim();
 		
 		// Check tên khách hàng
 		if(tenKH.length() > 0) {
 			if(!tenKH.matches("^[\\p{L}]+( [\\p{L}]+)*$")) {
    			JOptionPane.showMessageDialog(this, "Error: Tên nhân viên không hợp lệ ! Vui lòng nhập lại");
				txtTenNV.requestFocus(true);
				txtTenNV.setBorder(bdFalse);
				return false;
    		}else {
    			txtTenNV.setBorder(bdTrue);
    		}
 		}
 		
 		// check số điện thoại
 		if(sdt.length() > 0) {
 			if(!sdt.matches("^\\d+$")) {
    			JOptionPane.showMessageDialog(this, "Error: Số Điện Thoại của bạn không hợp lệ ! Vui lòng nhập lại");
				txtSoDienThoai.requestFocus(true);
				txtSoDienThoai.setBorder(bdFalse);
				return false;
    		}else {
    			txtSoDienThoai.setBorder(bdTrue);
    		}
 		}
 		return true;
 	}
	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
    

    // End of variables declaration                   
}
