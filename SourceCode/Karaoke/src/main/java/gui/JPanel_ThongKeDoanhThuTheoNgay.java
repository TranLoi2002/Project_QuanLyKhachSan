/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;
import javax.swing.GroupLayout.Alignment;

import javax.swing.JOptionPane;

import java.util.Date;
import java.util.HashMap;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import com.toedter.calendar.JDateChooser;

import connectDB.ConnectDB;
import dao.HoaDonThanhToan_DAO;
import dao.HoaDonThuePhong_DAO;
import entity.HoaDonThuePhong;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.SwingConstants;
import java.awt.Color;
import javax.swing.JTabbedPane;

/**
 *
 * @author ADMIN
 */
public class JPanel_ThongKeDoanhThuTheoNgay extends javax.swing.JPanel {

    private DefaultTableModel model;
	private JDateChooser dateChooser;
	private HoaDonThuePhong_DAO hoaDonThuePhong_DAO;
	private HoaDonThanhToan_DAO hoaDonThanhToan_Dao;
	
	/**
     * Creates new form ThongKeDoanhThuTheoNgay
     */
    public JPanel_ThongKeDoanhThuTheoNgay() {
    	try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
        hoaDonThuePhong_DAO = new HoaDonThuePhong_DAO();
        hoaDonThanhToan_Dao = new HoaDonThanhToan_DAO();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlKQDoanhThu = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        tabThongKeTheoNgay = new javax.swing.JTabbedPane();

        jPanel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1250, 755));

        pnlKQDoanhThu.setBorder(javax.swing.BorderFactory.createTitledBorder("Kết Qủa Doanh Thu"));
        pnlKQDoanhThu.setToolTipText("Kết quả doanh thu");
        
        JLabel lblDoanhThuDV = new JLabel("Tổng Doanh Thu Dịch Vụ");
        lblDoanhThuDV.setFont(new Font("Tahoma", Font.BOLD, 20));
        
        JLabel lblDoanhThu = new JLabel("Tổng Doanh Thu ");
        lblDoanhThu.setFont(new Font("Tahoma", Font.BOLD, 20));
        
        txtDoanhThuDV = new JLabel("0");
        txtDoanhThuDV.setForeground(new Color(255, 0, 0));
        txtDoanhThuDV.setHorizontalAlignment(SwingConstants.CENTER);
        txtDoanhThuDV.setFont(new Font("Tahoma", Font.BOLD, 30));
        
        txtDoanhThu = new JLabel("0");
        txtDoanhThu.setForeground(new Color(255, 0, 0));
        txtDoanhThu.setHorizontalAlignment(SwingConstants.CENTER);
        txtDoanhThu.setFont(new Font("Tahoma", Font.BOLD, 30));

        javax.swing.GroupLayout pnlKQDoanhThuLayout = new javax.swing.GroupLayout(pnlKQDoanhThu);
        pnlKQDoanhThuLayout.setHorizontalGroup(
        	pnlKQDoanhThuLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnlKQDoanhThuLayout.createSequentialGroup()
        			.addGroup(pnlKQDoanhThuLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(pnlKQDoanhThuLayout.createSequentialGroup()
        					.addGap(125)
        					.addComponent(txtDoanhThuDV, GroupLayout.PREFERRED_SIZE, 359, GroupLayout.PREFERRED_SIZE))
        				.addGroup(pnlKQDoanhThuLayout.createSequentialGroup()
        					.addGap(183)
        					.addComponent(lblDoanhThuDV, GroupLayout.PREFERRED_SIZE, 269, GroupLayout.PREFERRED_SIZE)))
        			.addGroup(pnlKQDoanhThuLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(pnlKQDoanhThuLayout.createSequentialGroup()
        					.addGap(364)
        					.addComponent(lblDoanhThu, GroupLayout.PREFERRED_SIZE, 180, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap(142, Short.MAX_VALUE))
        				.addGroup(Alignment.TRAILING, pnlKQDoanhThuLayout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(txtDoanhThu, GroupLayout.PREFERRED_SIZE, 389, GroupLayout.PREFERRED_SIZE)
        					.addGap(47))))
        );
        pnlKQDoanhThuLayout.setVerticalGroup(
        	pnlKQDoanhThuLayout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(pnlKQDoanhThuLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(pnlKQDoanhThuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblDoanhThu, GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
        				.addComponent(lblDoanhThuDV, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(pnlKQDoanhThuLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtDoanhThuDV)
        				.addComponent(txtDoanhThu))
        			.addGap(16))
        );
        pnlKQDoanhThu.setLayout(pnlKQDoanhThuLayout);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabThongKeTheoNgay.setBackground(new java.awt.Color(255, 255, 255));
        tabThongKeTheoNgay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabThongKeTheoNgay.setToolTipText("Chi Tiết");
        tabThongKeTheoNgay.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tabThongKeTheoNgay.setPreferredSize(new java.awt.Dimension(300, 100));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3Layout.setHorizontalGroup(
        	jPanel3Layout.createParallelGroup(Alignment.TRAILING)
        		.addComponent(tabThongKeTheoNgay, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 1224, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
        	jPanel3Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel3Layout.createSequentialGroup()
        			.addComponent(tabThongKeTheoNgay, GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
        			.addContainerGap())
        );
        jPanel3.setLayout(jPanel3Layout);
        
        dateChooser = new JDateChooser();
        pnlBangChiTiet = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblChiTietTheoNgay = new javax.swing.JTable();
        
                               
                tblChiTietTheoNgay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
                tblChiTietTheoNgay.setModel(model = new DefaultTableModel(
                	new Object[][] {
                		
                	},
                	new String[] {
                	 "Ph\u00F2ng","Tổng Thời Gian Sử Dụng","Tổng Tiền Dịch Vụ Theo Phòng", "T\u1ED5ng Ti\u1EC1n ( VNĐ)"
                	}
                ) {
                	Class[] columnTypes = new Class[] {
                		Object.class, String.class, Object.class, Integer.class, Object.class, Object.class
                	};
                	public Class getColumnClass(int columnIndex) {
                		return columnTypes[columnIndex];
                	}
                });
                tblChiTietTheoNgay.setShowGrid(true);
                jScrollPane2.setViewportView(tblChiTietTheoNgay);
                
                                                        
                                                                javax.swing.GroupLayout pnlBangChiTietLayout = new javax.swing.GroupLayout(pnlBangChiTiet);
                                                                pnlBangChiTietLayout.setHorizontalGroup(
                                                                	pnlBangChiTietLayout.createParallelGroup(Alignment.LEADING)
                                                                		.addGroup(pnlBangChiTietLayout.createSequentialGroup()
                                                                			.addGap(21)
                                                                			.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 1173, GroupLayout.PREFERRED_SIZE)
                                                                			.addContainerGap(23, Short.MAX_VALUE))
                                                                );
                                                                pnlBangChiTietLayout.setVerticalGroup(
                                                                	pnlBangChiTietLayout.createParallelGroup(Alignment.LEADING)
                                                                		.addGroup(pnlBangChiTietLayout.createSequentialGroup()
                                                                			.addContainerGap()
                                                                			.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 466, GroupLayout.PREFERRED_SIZE)
                                                                			.addContainerGap(40, Short.MAX_VALUE))
                                                                );
                                                                pnlBangChiTiet.setLayout(pnlBangChiTietLayout);
                                                                
                                                                        tabThongKeTheoNgay.addTab("Chi Tiết", pnlBangChiTiet);
                                        
                                       dateChooser.addPropertyChangeListener((PropertyChangeListener) new PropertyChangeListener() {
                                        @Override
                                        public void propertyChange(PropertyChangeEvent evt) {
                                            if ("date".equals(evt.getPropertyName())) {
                                                // Người dùng đã chọn một ngày mới
                                                Date selectedDate = dateChooser.getDate();
                                                // Thực hiện thao tác thống kê hoặc xử lý dữ liệu với ngày mới
                                                // Gọi hàm hoặc thực hiện các hành động cần thiết ở đây
                                                docDuLieuLenBang();
                                            }
                                        }
                                    });
     
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1Layout.setHorizontalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(pnlKQDoanhThu, GroupLayout.PREFERRED_SIZE, 1191, GroupLayout.PREFERRED_SIZE)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGap(1027)
        					.addComponent(dateChooser, GroupLayout.PREFERRED_SIZE, 182, GroupLayout.PREFERRED_SIZE)))
        			.addGap(27))
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, 1226, Short.MAX_VALUE)
        			.addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addGap(16)
        			.addComponent(pnlKQDoanhThu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGap(1)
        			.addComponent(dateChooser, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGap(17)
        			.addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, 560, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel1.setLayout(jPanel1Layout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, 1225, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        this.setLayout(layout);
    }// </editor-fold>//GEN-END:initComponents

    
    private void docDuLieuLenBang() {
//        if (dateChooser.getDate() == null) {
//            JOptionPane.showMessageDialog(null, "Vui lòng chọn ngày bạn muốn thống kê");
//        } else {
            model.setRowCount(0);
            double tongTienThanhToan = 0;
            double tongTienDichVu = 0;
            int tongTgSuDung = 0;
            java.util.Date datetime = dateChooser.getDate();
            java.sql.Date ngay = new java.sql.Date(datetime.getTime());
            ArrayList<HoaDonThuePhong> dsHD = hoaDonThuePhong_DAO.getHDTheoNgay(ngay);
           
            
            DecimalFormat formatter = new DecimalFormat("###,###,###");
            
            HashMap<String, Object[]> phongHatMap = new HashMap<>();

            for (HoaDonThuePhong hd : dsHD) {
                String maPhong = hd.getPhongHat().getMaPhongHat();

                try {
                    tongTienThanhToan = hoaDonThanhToan_Dao.getTongTienThanhToanTheoPhong(maPhong,ngay);
                    tongTienDichVu = hoaDonThanhToan_Dao.getTongTienDichVuTheoPhong(maPhong,ngay);
                    tongTgSuDung = hoaDonThanhToan_Dao.getTongThoiGianSuDungTheoPhong(maPhong,ngay);
                } catch (Exception e) {
                    e.printStackTrace();
                }

                // Kiểm tra xem phòng đã có trong Map chưa
                if (phongHatMap.containsKey(maPhong)) {
                    // Nếu đã có, cập nhật tổng tiền thanh toán và tổng tiền dịch vụ
                    Object[] info = phongHatMap.get(maPhong);
                    double prevTongTienThanhToan = (double) info[0];
                    double prevTongTienDichVu = (double) info[1];
                    int prevTongThoiGianSuDung = (int) info[2];

                    // Cập nhật tổng tiền
                    double updatedTongTienThanhToan = prevTongTienThanhToan + tongTienThanhToan;
                    double updatedTongTienDichVu = prevTongTienDichVu + tongTienDichVu;
                    int updatedTongThoiGian = prevTongThoiGianSuDung + tongTgSuDung;

                    // Cập nhật thông tin trong Map
                    phongHatMap.put(maPhong, new Object[] { prevTongTienThanhToan  ,prevTongTienDichVu, prevTongThoiGianSuDung});
                } else {
                    // Nếu chưa có, thêm thông tin của phòng hát vào Map
                    phongHatMap.put(maPhong, new Object[] {tongTienThanhToan,tongTienDichVu ,tongTgSuDung});
                }
             // Hiển thị thông tin từ Map lên bảng
               

            }
            for (Map.Entry<String, Object[]> entry : phongHatMap.entrySet()) {
                String maPhong = entry.getKey();
                Object[] info = entry.getValue();

                 tongTienThanhToan = (double) info[0];
                 tongTienDichVu = (double) info[1];
                 
//                 System.out.println(tongTienThanhToan);
                 tongTgSuDung = (int) info[2];

                model.addRow(new Object[] { 
                    maPhong, 
                    tongTgSuDung,
                    formatter.format(tongTienDichVu),
                    formatter.format(tongTienThanhToan)
                });
            }
            double tongTien = hoaDonThanhToan_Dao.getTongTienTheoNgay(ngay);
            double tongTienDV = hoaDonThanhToan_Dao.getTongTienDichVuTheoNgay(ngay);
            String tt = formatter.format(tongTien) + " VNĐ";
            String ttDV = formatter.format(tongTienDV) + " VNĐ";
            
            txtDoanhThu.setText(tt);
            txtDoanhThuDV.setText(ttDV);
        }
//    }


    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblChiTietTheoNgay;
    private javax.swing.JPanel pnlBangChiTiet;
    private javax.swing.JPanel pnlKQDoanhThu;
    private javax.swing.JTabbedPane tabThongKeTheoNgay;
    private JLabel txtDoanhThuDV;
    private JLabel txtDoanhThu;
}
