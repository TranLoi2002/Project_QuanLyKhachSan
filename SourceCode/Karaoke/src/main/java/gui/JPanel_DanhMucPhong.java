/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

import connectDB.ConnectDB;
import dao.LoaiPhong_DAO;
import dao.Phong_DAO;
import entity.LoaiPhong;
import entity.PhongHat;

/**
 *
 * @author PC
 */
public class JPanel_DanhMucPhong extends javax.swing.JPanel {

    private Phong_DAO phong_dao;
	private ArrayList<PhongHat> listPhong;
	private LoaiPhong_DAO loaiPhong_dao;
	private DefaultTableModel model_Phong;
	/**
     * Creates new form JPanel_DanhMucPhong
     */
    public JPanel_DanhMucPhong() {
		try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		phong_dao = new Phong_DAO();
		loaiPhong_dao = new LoaiPhong_DAO();
        initComponents();
        
     // tooltip các nút chức năng của quan lý dịch vụ
     jButtonThem.setToolTipText("Atl + A");		
     jButtonXoa.setToolTipText("Atl + R");
     jButtonCapNhat.setToolTipText("Atl + U");
     jButtonLamMoi.setToolTipText("Atl + C");

     // sử dụng phím tắt
     jButtonThem.setMnemonic(KeyEvent.VK_A);
     jButtonXoa.setMnemonic(KeyEvent.VK_R);
     jButtonCapNhat.setMnemonic(KeyEvent.VK_U);
     jButtonLamMoi.setMnemonic(KeyEvent.VK_C);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTieuDe = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelBody = new javax.swing.JPanel();
        jLabelMaPhong = new javax.swing.JLabel();
        jLabelTenPhong = new javax.swing.JLabel();
        jLabelTinhTrang = new javax.swing.JLabel();
        jTextFieldMaPhong = new javax.swing.JTextField();
        jTextFieldTenPhong = new javax.swing.JTextField();
        jComboBoxTinhTrang = new javax.swing.JComboBox<>();
        jLabelLoaiPhong = new javax.swing.JLabel();
        jLabelGiaPhong = new javax.swing.JLabel();
        jLabelSucChua = new javax.swing.JLabel();
        jComboBoxSucChua = new javax.swing.JComboBox<>();
        jComboBoxLoaiPhong = new javax.swing.JComboBox<>();
        jTextFieldGiaPhong = new javax.swing.JTextField();
        jButtonThem = new javax.swing.JButton();
        jButtonCapNhat = new javax.swing.JButton();
        jButtonXoa = new javax.swing.JButton();
        jButtonLamMoi = new javax.swing.JButton();
        jPanelLast = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDanhSachPhong = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1250, 720));
        setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Danh mục phòng hát");
        jLabel1.setPreferredSize(new java.awt.Dimension(240, 100));
        jPanelTieuDe.add(jLabel1);

        add(jPanelTieuDe, java.awt.BorderLayout.PAGE_START);

        jPanelBody.setBackground(new java.awt.Color(204, 204, 204));
        jPanelBody.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phòng hát", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanelBody.setPreferredSize(new java.awt.Dimension(1250, 435));

        jLabelMaPhong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelMaPhong.setText("Mã phòng:");

        jLabelTenPhong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelTenPhong.setText("Tên phòng:");

        jLabelTinhTrang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelTinhTrang.setText("Tình trạng:");

        jTextFieldMaPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldMaPhong.setEnabled(false);

        jTextFieldTenPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jComboBoxTinhTrang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBoxTinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--","Phòng trống", "Đang sử dụng", "Phòng chờ" }));
        jComboBoxTinhTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTinhTrangActionPerformed(evt);
            }
        });

        jLabelLoaiPhong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelLoaiPhong.setText("Loại phòng:");

        jLabelGiaPhong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelGiaPhong.setText("Giá phòng:");

        jLabelSucChua.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelSucChua.setText("Sức chứa:");

        jComboBoxSucChua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBoxSucChua.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" , "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"}));
        jComboBoxLoaiPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBoxLoaiPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" }));
		/* Đổ dữ liệu lên comboBox */
		ArrayList<LoaiPhong> listLoaiPhong = loaiPhong_dao.getAllLoaiPhong();
		for (LoaiPhong lp : listLoaiPhong) {
			jComboBoxLoaiPhong.addItem(lp.getTenLoaiPhong());
		}
       
        
        jTextFieldGiaPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButtonThem.setBackground(java.awt.SystemColor.controlHighlight);
        jButtonThem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonThem.setIcon(new javax.swing.ImageIcon("item/add25.png")); // NOI18N
        jButtonThem.setText("Thêm");
        jButtonThem.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				addnew_Phong();
			}
		});
        
        
        jButtonCapNhat.setBackground(java.awt.SystemColor.controlHighlight);
        jButtonCapNhat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonCapNhat.setIcon(new javax.swing.ImageIcon("item/update25.png")); // NOI18N
        jButtonCapNhat.setText("Cập nhật");
        jButtonCapNhat.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				edit_Phong();
			}
		});
        
        jButtonXoa.setBackground(java.awt.SystemColor.controlHighlight);
        jButtonXoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonXoa.setIcon(new javax.swing.ImageIcon("item/delete25.png")); // NOI18N
        jButtonXoa.setText("Xóa");
        jButtonXoa.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				deletePhong();
			}
		});
        
        jButtonLamMoi.setBackground(java.awt.SystemColor.controlHighlight);
        jButtonLamMoi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonLamMoi.setIcon(new javax.swing.ImageIcon("item/refresh25.png")); // NOI18N
        jButtonLamMoi.setText("Làm mới");
        jButtonLamMoi.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				clear_Phong();
			}
		});
        
        
        javax.swing.GroupLayout jPanelBodyLayout = new javax.swing.GroupLayout(jPanelBody);
        jPanelBody.setLayout(jPanelBodyLayout);
        jPanelBodyLayout.setHorizontalGroup(
            jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBodyLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBodyLayout.createSequentialGroup()
                        .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldTenPhong))
                            .addComponent(jComboBoxTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE))
                    .addGroup(jPanelBodyLayout.createSequentialGroup()
                        .addComponent(jButtonThem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBodyLayout.createSequentialGroup()
                        .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelGiaPhong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelSucChua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelLoaiPhong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxSucChua, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldGiaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelBodyLayout.createSequentialGroup()
                        .addComponent(jButtonXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(jButtonLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(100, 100, 100))
        );
        jPanelBodyLayout.setVerticalGroup(
            jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelGiaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldGiaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSucChua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSucChua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );


        add(jPanelBody, java.awt.BorderLayout.CENTER);

        jPanelLast.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách phòng hát", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanelLast.setPreferredSize(new java.awt.Dimension(1250, 330));

        jTableDanhSachPhong.setBackground(new java.awt.Color(242, 242, 242));
        jTableDanhSachPhong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableDanhSachPhong.setModel(model_Phong = new DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Mã phòng", "Tên phòng", "Loại phòng", "Giá phòng", "Tình trạng", "Sức chứa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableDanhSachPhong.setGridColor(new java.awt.Color(204, 204, 204));
        jTableDanhSachPhong.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jTableDanhSachPhong.setShowGrid(true);
        jScrollPane1.setViewportView(jTableDanhSachPhong);
        // load tất cả các phòng
        loadPhong();
        
        jTableDanhSachPhong.addMouseListener(new MouseListener() {
			
			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				int pos = jTableDanhSachPhong.getSelectedRow();
				jTextFieldMaPhong.setText(model_Phong.getValueAt(pos, 0).toString());
				jTextFieldMaPhong.setEnabled(false);
				jTextFieldTenPhong.setText(model_Phong.getValueAt(pos, 1).toString());
				jComboBoxLoaiPhong.setSelectedItem(model_Phong.getValueAt(pos, 2));
				jTextFieldGiaPhong.setText(model_Phong.getValueAt(pos, 3).toString());
				jComboBoxTinhTrang.setSelectedItem(model_Phong.getValueAt(pos, 4));
				
				String number = jTableDanhSachPhong.getValueAt(pos, 5).toString();
				jComboBoxSucChua.setSelectedItem(number);
			}

		});
        
        javax.swing.GroupLayout jPanelLastLayout = new javax.swing.GroupLayout(jPanelLast);
        jPanelLast.setLayout(jPanelLastLayout);
        jPanelLastLayout.setHorizontalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLastLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1228, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelLastLayout.setVerticalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLastLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanelLast, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxTinhTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTinhTrangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTinhTrangActionPerformed

	// Check dữ liệu
	Border bdFalse = BorderFactory.createLineBorder(Color.red);
	Border bdTrue = BorderFactory.createLineBorder(Color.green);
    // đọc dữ liệu vào bảng phòng
    public void loadPhong() {
    	model_Phong.setRowCount(0);
		listPhong = phong_dao.getAllPhong();
		for (PhongHat ph : listPhong) {
			model_Phong.addRow(new Object[] { 
					ph.getMaPhongHat(), ph.getTenPhongHat() ,
					ph.getLoaiPhong().getTenLoaiPhong(),
					ph.getGiaPhong(), ph.getTinhTrang(), 
					ph.getSucChua() });
		}
	}
    // thêm phòng 
	private void addnew_Phong() {
		if (validDataPhong()) {
			if (phong_dao.kiemTraTen(jTextFieldTenPhong.getText().trim()) > 0) {
				JOptionPane.showMessageDialog(this, "Error: Tên phòng bị trùng!!!\n Nhập lại.");
				jTextFieldTenPhong.requestFocus(true);
				jTextFieldTenPhong.setBorder(bdFalse);
			}
			else {
				PhongHat p = revertPhong();
				phong_dao.addPhong(p);
				JOptionPane.showMessageDialog(this, "Thêm thành công!");
				model_Phong.setRowCount(0);
				loadPhong();
				clear_Phong();
			}
		}
	}

	// cập nhật phòng
	public void edit_Phong() {
		int row = jTableDanhSachPhong.getSelectedRow();
		if (jTextFieldMaPhong.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "Bạn chưa chọn phòng để cập nhật thông tin!");
		} else {
			int choice = JOptionPane.showConfirmDialog(null, "Ban có chắc chắn muốn cập nhật không ?");
			if (choice == JOptionPane.YES_OPTION) {
				if (validDataPhong()) {
					String ma = jTextFieldMaPhong.getText().trim();
					PhongHat p = update_Phong(ma);

					phong_dao.capNhat_PhongHat(p);
					loadPhong();
					clear_Phong();
					JOptionPane.showMessageDialog(null, "Cập nhật hoàn tất!");
				}
			}
		}
	}
    // tạo 1 phòng
	public PhongHat revertPhong() {
		// TODO Auto-generated method stub
		String ma = generateCode();
		int count = phong_dao.kiemTraMa(ma);
		do {
			ma = generateCode();
		} while (count > 0);
		String tenPhong = jTextFieldTenPhong.getText().trim();
		String loai = jComboBoxLoaiPhong.getSelectedItem().toString();
		String maLoaiPhong = loaiPhong_dao.getMaLoaiPTheoTen(loai);
		String tt = jComboBoxTinhTrang.getSelectedItem().toString();
		double gia = Float.parseFloat(jTextFieldGiaPhong.getText());
		int sucChua = Integer.parseInt(jComboBoxSucChua.getSelectedItem().toString());
		return new PhongHat(ma, tenPhong, new LoaiPhong(maLoaiPhong, loai), gia, tt, sucChua);
		
	}
	
	// cập nhật 1 phòng
	public PhongHat update_Phong(String ma) {
		String tenPhong = jTextFieldTenPhong.getText().trim();
		String loai = jComboBoxLoaiPhong.getSelectedItem().toString();
		String maLoaiPhong = loaiPhong_dao.getMaLoaiPTheoTen(loai);
		String tt = jComboBoxTinhTrang.getSelectedItem().toString();
		double gia = Float.parseFloat(jTextFieldGiaPhong.getText());
		int sucChua = Integer.parseInt(jComboBoxSucChua.getSelectedItem().toString());
		
		return new PhongHat(ma, tenPhong, new LoaiPhong(maLoaiPhong, loai), gia, tt, sucChua);
		
	}
	
    // kiểm tra thông tin nhập vào 
    public boolean validDataPhong() {
		// TODO Auto-generated method stub
    	String tenPhong = jTextFieldTenPhong.getText().trim();
		String loai = jComboBoxLoaiPhong.getSelectedItem().toString();
		String tt = jComboBoxTinhTrang.getSelectedItem().toString();
		String gia = jTextFieldGiaPhong.getText().trim();
		String sucChua = jComboBoxSucChua.getSelectedItem().toString();


		if (tenPhong.length() > 0 || !tenPhong.equals("")) {
			if (!tenPhong.matches("[0-9]{3}")) {
				JOptionPane.showMessageDialog(this, "Error: Tên phòng phải theo mẫu: là 1 dãy gồm 3 số");
				jTextFieldTenPhong.requestFocus(true);
				jTextFieldTenPhong.setBorder(bdFalse);
				return false;
			} 
			else {
				jTextFieldTenPhong.setBorder(bdTrue);
			}
		} else {
			JOptionPane.showMessageDialog(this, "Error: Chưa nhập tên phòng!");
			jTextFieldTenPhong.requestFocus(true);
			jTextFieldTenPhong.setBorder(bdFalse);
			return false;
		}


		// check loại phòng
		if (loai.equals("--Select--")) {
			JOptionPane.showMessageDialog(this, "Error: Chưa chọn loại phòng!");
			return false;
		}

		// check tình trạng phòng
		if (tt.equals("--Select--")) {
			JOptionPane.showMessageDialog(this, "Error: Chưa chọn tình trạng phòng!");
			return false;
		}

		// Check gia phòng
		if (gia.equals("")) {
			JOptionPane.showMessageDialog(this, "Error: Chưa nhập giá!");
			jTextFieldGiaPhong.requestFocus(true);
			jTextFieldGiaPhong.setBorder(bdFalse);
			return false;
		} else if (!gia.matches("[0-9]+\\.{0,1}[0-9]*")) {
				JOptionPane.showMessageDialog(this, "Error: Giá là giá trị số!");
				jTextFieldGiaPhong.requestFocus(true);
				jTextFieldGiaPhong.setBorder(bdFalse);
				return false;
		} 
		else if (Double.parseDouble(gia) < 150000) {
			JOptionPane.showMessageDialog(this, "Error: Giá phải lớn hơn 150000VND!");
			jTextFieldGiaPhong.requestFocus(true);
			jTextFieldGiaPhong.setBorder(bdFalse);
			return false;
		}
		else {
				jTextFieldGiaPhong.setBorder(bdTrue);
		}
		// check sức chứa
		if (sucChua.equals("--Select--")) {
			JOptionPane.showMessageDialog(this, "Error: Chưa chọn Sức chứa!");
			return false;
		}
		return true;
	}
    
    
    // làm mới 
	public void clear_Phong() {
		jTextFieldMaPhong.setText("");
		jTextFieldTenPhong.setText("");
		jComboBoxLoaiPhong.setSelectedIndex(0);
		jComboBoxTinhTrang.setSelectedIndex(0);
		jComboBoxSucChua.setSelectedIndex(0);
		jTextFieldGiaPhong.setText("");
		jTextFieldGiaPhong.setBorder(null);
	}
    // phát sinh mã
	public String generateCode() {
        // Khởi tạo một biến để lưu trữ mã
        String maPhongHat = "";
        String prefix;
        // Tạo một biến ngẫu nhiên
        Random random = new Random();

        // Lấy ngẫu nhiên một tiền tố
        String loaiPhong = jComboBoxLoaiPhong.getSelectedItem().toString();
        if (loaiPhong.equalsIgnoreCase("Vip"))
        	prefix = "PHV";
        else 
        	prefix = "PHT";

        // Tạo một chuỗi gồm 3 số ngẫu nhiên
        for (int i = 0; i < 3; i++) {
        	maPhongHat += random.nextInt(10);
        }

        return prefix + maPhongHat;
    }
	// xóa phòng
	public void deletePhong() {
		int row = jTableDanhSachPhong.getSelectedRow();
		String maPhong = jTextFieldMaPhong.getText();
		if (maPhong.equals("")) {
			JOptionPane.showMessageDialog(null, "Vui lòng chọn phòng để xóa!");
		} else {
			int choice = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa không ?", maPhong,
					JOptionPane.YES_NO_CANCEL_OPTION);
			if (choice == JOptionPane.YES_OPTION) {
				model_Phong.removeRow(row);
				phong_dao.delete_Phong(maPhong);
				JOptionPane.showMessageDialog(null, "Xóa xong!");
				clear_Phong();
			} else {
				JOptionPane.showMessageDialog(null, "Error!");
			}
		}
	}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCapNhat;
    private javax.swing.JButton jButtonLamMoi;
    private javax.swing.JButton jButtonThem;
    private javax.swing.JButton jButtonXoa;
    private javax.swing.JComboBox<String> jComboBoxLoaiPhong;
    private javax.swing.JComboBox<String> jComboBoxSucChua;
    private javax.swing.JComboBox<String> jComboBoxTinhTrang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelGiaPhong;
    private javax.swing.JLabel jLabelLoaiPhong;
    private javax.swing.JLabel jLabelMaPhong;
    private javax.swing.JLabel jLabelSucChua;
    private javax.swing.JLabel jLabelTenPhong;
    private javax.swing.JLabel jLabelTinhTrang;
    private javax.swing.JPanel jPanelBody;
    private javax.swing.JPanel jPanelLast;
    private javax.swing.JPanel jPanelTieuDe;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDanhSachPhong;
    private javax.swing.JTextField jTextFieldGiaPhong;
    private javax.swing.JTextField jTextFieldMaPhong;
    private javax.swing.JTextField jTextFieldTenPhong;
    // End of variables declaration//GEN-END:variables
}
