/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;
import javax.swing.GroupLayout.Alignment;
import javax.swing.border.Border;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import connectDB.ConnectDB;
import dao.DichVu_DAO;
import entity.DichVu;
import entity.KhachHang;
import entity.LoaiPhong;
import entity.PhongHat;


/**
 *
 * @author ADMIN
 */
public class JPanel_DanhMucDichVu extends javax.swing.JPanel {

	private DichVu_DAO dichvu_dao;
	private ArrayList<DichVu> listDichVu;
	private DefaultTableModel model_DichVu;
	private JComboBox cmbDonVi;
	
    /**
     * Creates new form quanLyDV
     */
    public JPanel_DanhMucDichVu() {
    	try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		dichvu_dao = new DichVu_DAO();
        initComponents();
        // tooltip các nút chức năng của quan lý dịch vụ
        btnThem.setToolTipText("Atl + A");		
        btnXoa.setToolTipText("Atl + R");
        btnCapNhat.setToolTipText("Atl + U");
        btnLamMoi.setToolTipText("Atl + C");

        // sử dụng phím tắt
        btnThem.setMnemonic(KeyEvent.VK_A);
        btnXoa.setMnemonic(KeyEvent.VK_R);
        btnCapNhat.setMnemonic(KeyEvent.VK_U);
        btnLamMoi.setMnemonic(KeyEvent.VK_C);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlThongTinDichVu = new javax.swing.JPanel();
        lblMaDV = new javax.swing.JLabel();
        lblTenDV = new javax.swing.JLabel();
        lblSoLuong = new javax.swing.JLabel();
        txtMaDV = new javax.swing.JTextField();
        txtTenDV = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        lblGiaDV = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        lblDonVi = new javax.swing.JLabel();
        txtGiaDV = new javax.swing.JTextField();
        cmbDonVi = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        cmbTrangThai = new javax.swing.JComboBox<>();
        pnlDSDichVu = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSDichVu = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1250, 755));

        pnlThongTinDichVu.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông Tin Dịch Vụ"));
        pnlThongTinDichVu.setPreferredSize(new java.awt.Dimension(1250, 755));

        lblMaDV.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMaDV.setText("Mã Dịch Vụ");

        lblTenDV.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTenDV.setText("Tên Dịch Vụ");

        lblSoLuong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSoLuong.setText("Số Lượng");

        txtMaDV.setEditable(false);
        txtMaDV.setToolTipText("mã dịch vụ");

        txtTenDV.setToolTipText("tên dịch vụ");

        txtSoLuong.setToolTipText("số lượng");

        lblGiaDV.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblGiaDV.setText("Giá Dịch Vụ");
        txtGiaDV.setToolTipText("giá dịch vụ");
        
        lblTrangThai.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTrangThai.setText("Trạng Thái");
       
        /* Đổ dữ liệu lên comboBox */
//		 listDichVu = dichvu_dao.getAllDichVu();
//		for (DichVu dv : listDichVu) {
//			cmbTrangThai.addItem(dv.getTrangThai());
//		}

        lblDonVi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDonVi.setText("Đơn Vị");
        
//        listDichVu = dichvu_dao.getAllDichVu();
//		for (DichVu dv : listDichVu) {
//			cmbDonVi.addItem(dv.getDonVi());
//		}

        cmbDonVi.setToolTipText("đơn vị ");

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon("item/add25.png")); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setToolTipText("Thêm");
        btnThem.setBorder(null);
        btnThem.setPressedIcon(new javax.swing.ImageIcon("item/add25.png")); // NOI18N
        btnThem.setSelectedIcon(new javax.swing.ImageIcon("item/add25.png")); // NOI18N
        btnThem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnThemItemStateChanged(evt);
            }
        });
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	addnew_DichVu();
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon("item/delete25.png")); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setToolTipText("Xóa");
        btnXoa.setBorder(null);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	deleteDichVu();
            }
        });

        btnCapNhat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCapNhat.setIcon(new javax.swing.ImageIcon("item/update25.png")); // NOI18N
        btnCapNhat.setText("Cập Nhật");
        btnCapNhat.setToolTipText("Cập Nhật");
        btnCapNhat.setBorder(null);
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	edit_DichVu();
            }
        });

        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon("item/refresh25.png")); // NOI18N
        btnLamMoi.setText("Làm Mới");
        btnLamMoi.setToolTipText("Làm Mới");
        btnLamMoi.setBorder(null);
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	clear_DichVu();
            }
        });

        cmbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Còn", "Sắp hết", "Ngừng Bán" }));
        cmbDonVi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thùng", "Lon" , "Chai" , "Bao" , "Dĩa", "Không"}));
        
        cmbTrangThai.setToolTipText("trạng thái");

        javax.swing.GroupLayout pnlThongTinDichVuLayout = new javax.swing.GroupLayout(pnlThongTinDichVu);
        pnlThongTinDichVu.setLayout(pnlThongTinDichVuLayout);
        pnlThongTinDichVuLayout.setHorizontalGroup(
            pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinDichVuLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinDichVuLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(lblMaDV)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongTinDichVuLayout.createSequentialGroup()
                            .addComponent(lblSoLuong)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongTinDichVuLayout.createSequentialGroup()
                            .addComponent(lblTenDV)
                            .addGap(18, 18, 18)
                            .addComponent(txtTenDV, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(58, 58, 58)
                .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTrangThai)
                    .addComponent(lblGiaDV)
                    .addComponent(lblDonVi))
                .addGap(18, 18, 18)
                .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtGiaDV, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addComponent(cmbTrangThai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbDonVi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlThongTinDichVuLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        pnlThongTinDichVuLayout.setVerticalGroup(
            pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinDichVuLayout.createSequentialGroup()
                .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinDichVuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaDV)
                            .addComponent(txtMaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlThongTinDichVuLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGiaDV)
                            .addComponent(txtGiaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinDichVuLayout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenDV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTenDV))
                        .addGap(18, 18, 18))
                    .addGroup(pnlThongTinDichVuLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTrangThai))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSoLuong))
                    .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbDonVi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDonVi)))
                .addGap(17, 17, 17)
                .addGroup(pnlThongTinDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        pnlDSDichVu.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh Sách Dịch Vụ"));

        tblDSDichVu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblDSDichVu.setModel(model_DichVu = new DefaultTableModel(
        	new Object[][] {
        	},
        	new String[] {
        		"M\u00E3 D\u1ECBch V\u1EE5", "T\u00EAn D\u1ECBch V\u1EE5", "Gi\u00E1", "S\u1ED1 L\u01B0\u1EE3ng ", "\u0110\u01A1n V\u1ECB", "Tr\u1EA1ng Th\u00E1i"
        	}
        ) {
        	Class[] columnTypes = new Class[] {
        		String.class, String.class, Float.class, Integer.class, String.class, String.class
        	};
        	public Class getColumnClass(int columnIndex) {
        		return columnTypes[columnIndex];
        	}
        	@Override
			public boolean isCellEditable(int row, int column) {
				return false; // Không cho phép chỉnh sửa bất kỳ ô nào trên bảng
			}
        });
        tblDSDichVu.setToolTipText("danh sách dịch vụ");
        tblDSDichVu.setFocusable(false);
        tblDSDichVu.setShowGrid(true);
        jScrollPane1.setViewportView(tblDSDichVu);
        
        JTableHeader header_font = tblDSDichVu.getTableHeader();
		Font f = new Font("Arial", Font.BOLD, 13);
		header_font.setFont(f);
        
        loadDichVu();

        tblDSDichVu.addMouseListener(new MouseListener() {
			
			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				int pos = tblDSDichVu.getSelectedRow();
				txtMaDV.setText(model_DichVu.getValueAt(pos, 0).toString());
				txtMaDV.setEnabled(false);
				txtTenDV.setText(model_DichVu.getValueAt(pos, 1).toString());
				 float gia = Float.parseFloat((model_DichVu.getValueAt(pos, 2).toString()));
				 DecimalFormat df = new DecimalFormat("###,###,###");
				 String giaDinhDang = df.format(gia);
				 txtGiaDV.setText(giaDinhDang);
				txtSoLuong.setText(model_DichVu.getValueAt(pos, 3).toString());
				
				cmbDonVi.setSelectedItem(model_DichVu.getValueAt(pos, 4));
				cmbTrangThai.setSelectedItem(model_DichVu.getValueAt(pos, 5));
				
				txtTenDV.requestFocus();
			}

		});
        
        
        javax.swing.GroupLayout pnlDSDichVuLayout = new javax.swing.GroupLayout(pnlDSDichVu);
        pnlDSDichVuLayout.setHorizontalGroup(
        	pnlDSDichVuLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnlDSDichVuLayout.createSequentialGroup()
        			.addGap(24)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 1129, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(51, Short.MAX_VALUE))
        );
        pnlDSDichVuLayout.setVerticalGroup(
        	pnlDSDichVuLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(pnlDSDichVuLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 394, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(29, Short.MAX_VALUE))
        );
        pnlDSDichVu.setLayout(pnlDSDichVuLayout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(15)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
        				.addComponent(pnlDSDichVu, Alignment.LEADING, 0, 0, Short.MAX_VALUE)
        				.addComponent(pnlThongTinDichVu, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE))
        			.addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(17)
        			.addComponent(pnlThongTinDichVu, GroupLayout.PREFERRED_SIZE, 240, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(pnlDSDichVu, GroupLayout.PREFERRED_SIZE, 445, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(35, Short.MAX_VALUE))
        );
        this.setLayout(layout);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnThemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnThemItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemItemStateChanged

    
    
    // thêm dịch vụ
 	private void addnew_DichVu() {
 		if(ValidData()) {
 			DichVu kh = revertDichVu();
 			dichvu_dao.addDichVu(kh);
 			JOptionPane.showMessageDialog(this, "Thêm thành công!");
 			model_DichVu.setRowCount(0);
 			loadDichVu();
 			clear_DichVu();	
 		}
 	}
 	  // làm mới data nhập dịch vụ
    public void clear_DichVu() {
		txtMaDV.setText("");
		txtTenDV.setText("");
		txtGiaDV.setText("");
		txtSoLuong.setText("");
		cmbDonVi.setSelectedIndex(0);
		cmbTrangThai.setSelectedIndex(0);
		
		loadDichVu();
		txtTenDV.requestFocus();
	}
    
    public DichVu revertDichVu() {
			// TODO Auto-generated method stub
			String ma = generateCode();
			int count = dichvu_dao.kiemTraMa(ma);
			do {
				ma = generateCode();
			}while(count > 0);
			String tenDV = txtTenDV.getText().trim();
			
			DecimalFormat df = new DecimalFormat("###,###,###");
			String giaText = txtGiaDV.getText();
			float gia = Float.parseFloat(giaText); // Chuyển đổi chuỗi thành số
			String giaDinhDang = df.format(gia); // Định dạng số đã chuyển đổi thành chuỗi

			int soLuong = Integer.parseInt(txtSoLuong.getText());
			String donVi = cmbDonVi.getSelectedItem().toString();
			String trangThai = cmbTrangThai.getSelectedItem().toString();
			
			return new DichVu(ma, tenDV, gia, soLuong, donVi, trangThai);
	}
    
    // xóa dịch vụ
 	public void deleteDichVu() {
 		int row = tblDSDichVu.getSelectedRow();
 		String maDV = txtMaDV.getText();
 		if (maDV.equals("")) {
 			JOptionPane.showMessageDialog(null, "Vui lòng chọn dịch vụ không còn được sử dụng !");
 		} else {
 			int choice = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn thay đổi trạng thái không ?", maDV,
 					JOptionPane.YES_NO_CANCEL_OPTION);
 			if (choice == JOptionPane.YES_OPTION) {
 				
 				dichvu_dao.markDichVuAsNgungBan(maDV );
 				JOptionPane.showMessageDialog(null, "Dịch vụ đã không còn được sử dụng nữa !");
 				clear_DichVu();
 			} else {
 				JOptionPane.showMessageDialog(null, "Error!");
 			}
 		}
 	}
 	
	// cập nhật dịch vụ
	public void edit_DichVu() {
		int row = tblDSDichVu.getSelectedRow();
		if (txtMaDV.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "Bạn chưa chọn phòng để cập nhật thông tin!");
		} else{
			int choice = JOptionPane.showConfirmDialog(null, "Ban có chắc chắn muốn cập nhật không ?");
			if (choice == JOptionPane.YES_OPTION ) {
				if(ValidData()) {
					String ma = txtMaDV.getText().trim();
					DichVu p = update_DichVu(ma);
//					model_Phong.setValueAt(p.getTenPhongHat(), row, 1);
//					model_Phong.setValueAt(p.getLoaiPhong().getTenLoaiPhong(), row, 2);
//					model_Phong.setValueAt(p.getGiaPhong(), row, 3);
//					model_Phong.setValueAt(p.getTinhTrang(), row, 4);
//					model_Phong.setValueAt(p.getSucChua(), row, 5);
					dichvu_dao.capNhat_DichVu(p);
					loadDichVu();
					clear_DichVu();
					JOptionPane.showMessageDialog(null, "Cập nhật hoàn tất!");
					}
				}
			}
		
	}
 	
 // lấy thông tin field để cập nhật 1 dịch vụ
 	public DichVu update_DichVu(String ma) {
 		String tenPhong = txtTenDV.getText().trim();
 		String donvi = cmbDonVi.getSelectedItem().toString();
 		String trangThai = cmbTrangThai.getSelectedItem().toString();
 		float gia = Float.parseFloat(txtGiaDV.getText());
 		int soLuong = Integer.parseInt(txtSoLuong.getText());
 		
 		return new DichVu(ma, tenPhong, gia, soLuong, donvi, trangThai);
 	}
    
 // load phòng lên bang
    public void loadDichVu() {
    	model_DichVu.setRowCount(0);
		listDichVu = dichvu_dao.getAllDichVu();
		DecimalFormat formatter = new DecimalFormat("###,###,###");
		for (DichVu dv : listDichVu) {
			model_DichVu.addRow(new Object[] { 
					dv.getMaDichVu(), dv.getTenDichVu() , dv.getGiaDichVu(), dv.getSoLuong() ,
					dv.getDonVi(), dv.getTrangThai()});
		}
	}
    
    // border - thông báo lỗi nhập liệu
    Border bdFalse = BorderFactory.createLineBorder(Color.red);
	Border bdTrue = BorderFactory.createLineBorder(Color.green);
	
    public boolean ValidData() {
    	String tenDV = txtTenDV.getText().trim();
//    	float gia = Float.parseFloat(txtGiaDV.getText());
    	String gia = txtGiaDV.getText().trim();
//    	int soLuong = Integer.parseInt(txtSoLuong.getText());
    	String soLuong = txtSoLuong.getText().trim();
    	
//    	if(tenDV.equals("") && String.valueOf(gia).isEmpty() && String.valueOf(soLuong).isEmpty()) {
//    		JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin dịch vụ !");
//    		txtTenDV.requestFocus();
//    		return false;
//    	}
    	
    	// check tên dịch vụ
    	if(tenDV.length() > 0 || !tenDV.equals("")) {
    		if(!tenDV.matches("^[\\p{L}]+( [\\p{L}]+)*$")) {
    			JOptionPane.showMessageDialog(this, "Error: Tên dịch vụ không hợp lệ ! Vui lòng nhập lại");
				txtTenDV.requestFocus(true);
				txtTenDV.setBorder(bdFalse);
				return false;
    		}else {
    			txtTenDV.setBorder(bdTrue);
    		}
    	}else {
    		JOptionPane.showMessageDialog(this, "Error: Chưa nhập tên dịch vụ !");
			txtTenDV.requestFocus(true);
			txtTenDV.setBorder(bdFalse);
			return false;
    	}
    	
    	// check giá dịch vụ
//    	String giaDVText = txtGiaDV.getText().trim();
    	if (gia.equals("")) {
    	    JOptionPane.showMessageDialog(this, "Error: Chưa nhập giá!");
    	    txtGiaDV.requestFocus();
    	    txtGiaDV.setBorder(bdFalse);
    	    return false;
    	}
    	String numberPattern = "^[0-9]+(\\.[0-9]+)?$"; // Biểu thức chính quy để kiểm tra số
    	if (gia.matches(numberPattern)) {
    	    float giaDV = Float.parseFloat(gia);
    	    txtGiaDV.setBorder(bdTrue);
    	} else {
    	    JOptionPane.showMessageDialog(this, "Error: Giá không hợp lệ! Hãy nhập số.");
    	    txtGiaDV.requestFocus();
    	    txtGiaDV.setBorder(bdFalse);
    	    return false;
    	}
    	
    	// check số lượng
//    	String soLuongText = txtGiaDV.getText();
    	if (soLuong.equals("")) {
    	    JOptionPane.showMessageDialog(this, "Error: Chưa nhập số lượng!");
    	    txtSoLuong.requestFocus();
    	    txtSoLuong.setBorder(bdFalse);
    	    return false;
    	}
    	
    	if (soLuong.matches(numberPattern)) {
    	    int soluong = Integer.parseInt(soLuong);
    	    txtSoLuong.setBorder(bdTrue);
    	} else {
    	    JOptionPane.showMessageDialog(this, "Error: Giá không hợp lệ! Hãy nhập số.");
    	    txtSoLuong.requestFocus();
    	    txtSoLuong.setBorder(bdFalse);
    	    return false;
    	}
    	
    	return true;
    }
    
 // phát sinh mã dịch vụ
 	public String generateCode() {
         // Khởi tạo một biến để lưu trữ mã
         String maDichVu = "";
         String prefix = "DV";
         // Tạo một biến ngẫu nhiên
         Random random = new Random();
         // Tạo một chuỗi gồm 3 số ngẫu nhiên
         for (int i = 0; i < 3; i++) {
         	maDichVu += random.nextInt(10);
         }

         return prefix + maDichVu;
     }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
//    private javax.swing.JComboBox cmbDonVi;
    private javax.swing.JComboBox cmbTrangThai;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDonVi;
    private javax.swing.JLabel lblGiaDV;
    private javax.swing.JLabel lblMaDV;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTenDV;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JPanel pnlDSDichVu;
    private javax.swing.JPanel pnlThongTinDichVu;
    private javax.swing.JTable tblDSDichVu;
    private javax.swing.JTextField txtGiaDV;
    private javax.swing.JTextField txtMaDV;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenDV;
    // End of variables declaration//GEN-END:variables
}
